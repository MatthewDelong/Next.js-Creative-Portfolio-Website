/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: matousekfoto (https://sketchfab.com/matousekfoto)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/earth-globe-98d2b04d46474bafb4250cc75dc583b3
Title: Earth Globe 🌍
*/
"use client";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";

const Globe = React.memo(function Globe(props) {
  // Use React.memo for performance optimization
  const { nodes, materials } = useGLTF("/models/globe-transformed.glb");

  const modelRef = useRef()
  useFrame((state, delta) => {
    modelRef.current.rotation.y = Math.PI / 2 + Math.sin(state.clock.elapsedTime)
  })
  

  return (
    <group {...props} 
    dispose={null}
      ref={modelRef}
      position={[-0.05, 1.5, 0]}
      scale={[0.15, 0.15, 0.15]}
      rotation={[0.75, 0, 0]}
      >
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.meshNode_Material_u1_v1_0.geometry}
        material={materials.Material_u1_v1}
        position={[-5.177, -20.679, 0]}
        rotation={[-Math.PI / 2, 0.462, Math.PI]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.meshNode_Material_u2_v1_0.geometry}
        material={materials.Material_u2_v1}
        position={[-5.177, -20.679, 0]}
        rotation={[-Math.PI / 2, 0.462, Math.PI]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.meshNode_Material_u1_v2_0.geometry}
        material={materials.Material_u1_v2}
        position={[-5.177, -20.679, 0]}
        rotation={[-Math.PI / 2, 0.462, Math.PI]}
      />
    </group>
  );
});
export default Globe;
useGLTF.preload('/models/globe-transformed.glb');